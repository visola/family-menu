plugins {
    id "com.moowork.node" version "1.2.0"
    id "org.springframework.boot" version "1.5.7.RELEASE"
}

apply plugin: "findbugs"
apply plugin: "jacoco"
apply plugin: "java"
apply plugin: "eclipse"

repositories {
    mavenCentral()
}

dependencies {
    compile("com.zaxxer:HikariCP")
    compile("org.postgresql:postgresql")
    compile("org.liquibase:liquibase-core")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.visola.spring.security:spring-security-token-filter-spring-boot-starter:1.1")

    testCompile("com.jcabi:jcabi-matchers:1.4")
    testCompile("junit:junit")
    testCompile("org.hamcrest:hamcrest-core")
    testCompile("org.mockito:mockito-core")
}

jacocoTestReport {
    reports {
        csv.enabled false
        html.enabled true
        xml.enabled true
    }
}

sourceSets {
  main {
    resources {
      srcDir "${buildDir}/frontend"
    }
  }
}

eclipse {
  classpath {
    file.whenMerged { cp ->
      cp.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder("${buildDir}/frontend", null))
    }
  }
}

task bundleFrontend (type: NpmTask) {
  dependsOn npmInstall
  args = ["run", "bundleProd"]
  inputs.dir file("src/frontend")
  outputs.dir file("${buildDir}/frontend/static")
}

processResources.dependsOn bundleFrontend

task frontendLint (type: NpmTask) {
  dependsOn npmInstall
  args = ["run", "lint"]
  inputs.dir file("src/frontend")
  outputs.dir file("${buildDir}/frontend/static")
}

check.dependsOn frontendLint
